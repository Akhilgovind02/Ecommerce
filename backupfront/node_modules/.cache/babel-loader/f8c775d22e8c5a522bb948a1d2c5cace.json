{"ast":null,"code":"var _jsxFileName = \"E:\\\\baatbtraca\\\\ecom\\\\backupfront\\\\src\\\\screens\\\\OfferScreen.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction OfferScreen() {\n  _s();\n  const user = useSelector(state => state.user);\n  playerEmail = user.userInfo.details.email;\n\n  // useEffect(() => {\n  //     const fetchPlayers = async () => {\n  //       try {\n  //         const { data } = await Api.getRequest('/api/auction/bid/player');\n  //         const parsedData = JSON.parse(data);\n  //         console.log((parsedData));\n  //         // setPlayers(parsedData);\n  //         setLoading(false)\n  //       } catch (error) {\n  //         console.error('Error fetching players:', error);\n  //         setError('Error fetching players. Please try again.'); \n  //         setLoading(false);\n  //       }\n  //     };\n\n  //     fetchPlayers();\n  //   }, []);\n\n  //   console.log(players);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"OfferScreen\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(OfferScreen, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n_c = OfferScreen;\nexport default OfferScreen;\nvar _c;\n$RefreshReg$(_c, \"OfferScreen\");","map":{"version":3,"names":["React","useDispatch","useSelector","jsxDEV","_jsxDEV","OfferScreen","_s","user","state","playerEmail","userInfo","details","email","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/baatbtraca/ecom/backupfront/src/screens/OfferScreen.js"],"sourcesContent":["import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nfunction OfferScreen() {\r\n    const user = useSelector(state => state.user)\r\n    playerEmail = user.userInfo.details.email;\r\n\r\n    // useEffect(() => {\r\n    //     const fetchPlayers = async () => {\r\n    //       try {\r\n    //         const { data } = await Api.getRequest('/api/auction/bid/player');\r\n    //         const parsedData = JSON.parse(data);\r\n    //         console.log((parsedData));\r\n    //         // setPlayers(parsedData);\r\n    //         setLoading(false)\r\n    //       } catch (error) {\r\n    //         console.error('Error fetching players:', error);\r\n    //         setError('Error fetching players. Please try again.'); \r\n    //         setLoading(false);\r\n    //       }\r\n    //     };\r\n    \r\n    //     fetchPlayers();\r\n    //   }, []);\r\n    \r\n    //   console.log(players);\r\n  return (\r\n    <div>OfferScreen</div>\r\n  )\r\n}\r\n\r\nexport default OfferScreen"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAGtD,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAI,CAAC;EAC7CE,WAAW,GAAGF,IAAI,CAACG,QAAQ,CAACC,OAAO,CAACC,KAAK;;EAEzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;;EAEA;EACF,oBACER,OAAA;IAAAS,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAE1B;AAACX,EAAA,CA1BQD,WAAW;EAAA,QACHH,WAAW;AAAA;AAAAgB,EAAA,GADnBb,WAAW;AA4BpB,eAAeA,WAAW;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}