{"ast":null,"code":"var _jsxFileName = \"E:\\\\baatbtraca\\\\ecom\\\\backupfront\\\\src\\\\components\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Api } from '../utils/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [users, setUsers] = useState([]);\n  const [players, setPlayers] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const {\n          data: userData\n        } = await Api.getRequest('/api/user/');\n        setUsers(parsedData);\n        const {\n          data: playerData\n        } = await Api.getRequest('/api/players/');\n        setPlayers(playerData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  console.log(users);\n  //   console.log(players);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n  // <div>\n  //   <h2>Users</h2>\n  //   <table>\n  //     <thead>\n  //       <tr>\n  //         <th>Email</th>\n  //         <th>First Name</th>\n  //         <th>Last Name</th>\n  //         <th>Phone</th>\n  //       </tr>\n  //     </thead>\n  //     <tbody>\n  //       {users.map((user, index) => (\n  //         <tr key={index}>\n  //           <td>{user.email}</td>\n  //           <td>{user.firstname}</td>\n  //           <td>{user.lastname}</td>\n  //           <td>{user.phone}</td>\n  //         </tr>\n  //       ))}\n  //     </tbody>\n  //   </table>\n\n  //   <h2>Players</h2>\n  //   <table>\n  //     <thead>\n  //       <tr>\n  //         <th>Email</th>\n  //         <th>First Name</th>\n  //         <th>Last Name</th>\n  //         <th>Phone</th>\n  //       </tr>\n  //     </thead>\n  //     <tbody>\n  //       {players.map((player, index) => (\n  //         <tr key={index}>\n  //           <td>{player.email}</td>\n  //           <td>{player.firstname}</td>\n  //           <td>{player.lastname}</td>\n  //           <td>{player.phone}</td>\n  //         </tr>\n  //       ))}\n  //     </tbody>\n  //   </table>\n  // </div>\n  ;\n}\n_s(AdminDashboard, \"IGEF9QKsfjWl7je1lIHwDDA1qFY=\");\n_c = AdminDashboard;\nexport default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","Api","jsxDEV","_jsxDEV","AdminDashboard","_s","users","setUsers","players","setPlayers","fetchData","data","userData","getRequest","parsedData","playerData","error","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/baatbtraca/ecom/backupfront/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Api } from '../utils/Api';\r\n\r\nfunction AdminDashboard() {\r\n  const [users, setUsers] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const { data: userData } = await Api.getRequest('/api/user/');\r\n        setUsers(parsedData)\r\n\r\n        const { data: playerData } = await Api.getRequest('/api/players/');\r\n        setPlayers(playerData);\r\n      } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  console.log(users);\r\n//   console.log(players);\r\n\r\n  return (\r\n    <div></div>\r\n    // <div>\r\n    //   <h2>Users</h2>\r\n    //   <table>\r\n    //     <thead>\r\n    //       <tr>\r\n    //         <th>Email</th>\r\n    //         <th>First Name</th>\r\n    //         <th>Last Name</th>\r\n    //         <th>Phone</th>\r\n    //       </tr>\r\n    //     </thead>\r\n    //     <tbody>\r\n    //       {users.map((user, index) => (\r\n    //         <tr key={index}>\r\n    //           <td>{user.email}</td>\r\n    //           <td>{user.firstname}</td>\r\n    //           <td>{user.lastname}</td>\r\n    //           <td>{user.phone}</td>\r\n    //         </tr>\r\n    //       ))}\r\n    //     </tbody>\r\n    //   </table>\r\n\r\n    //   <h2>Players</h2>\r\n    //   <table>\r\n    //     <thead>\r\n    //       <tr>\r\n    //         <th>Email</th>\r\n    //         <th>First Name</th>\r\n    //         <th>Last Name</th>\r\n    //         <th>Phone</th>\r\n    //       </tr>\r\n    //     </thead>\r\n    //     <tbody>\r\n    //       {players.map((player, index) => (\r\n    //         <tr key={index}>\r\n    //           <td>{player.email}</td>\r\n    //           <td>{player.firstname}</td>\r\n    //           <td>{player.lastname}</td>\r\n    //           <td>{player.phone}</td>\r\n    //         </tr>\r\n    //       ))}\r\n    //     </tbody>\r\n    //   </table>\r\n    // </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAM;UAAEC,IAAI,EAAEC;QAAS,CAAC,GAAG,MAAMX,GAAG,CAACY,UAAU,CAAC,YAAY,CAAC;QAC7DN,QAAQ,CAACO,UAAU,CAAC;QAEpB,MAAM;UAAEH,IAAI,EAAEI;QAAW,CAAC,GAAG,MAAMd,GAAG,CAACY,UAAU,CAAC,eAAe,CAAC;QAClEJ,UAAU,CAACM,UAAU,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EACNO,OAAO,CAACC,GAAG,CAACZ,KAAK,CAAC;EACpB;;EAEE,oBACEH,OAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAU;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ;AAACjB,EAAA,CAtEQD,cAAc;AAAAmB,EAAA,GAAdnB,cAAc;AAwEvB,eAAeA,cAAc;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}