{"ast":null,"code":"var _jsxFileName = \"E:\\\\baatbtraca\\\\ecom\\\\backupfront\\\\src\\\\screens\\\\ViewPlayer.js\",\n  _s = $RefreshSig$();\nimport './ProductScreen.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewPlayer = () => {\n  _s();\n  const [players, setPlayers] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    const fetchPlayers = async () => {\n      try {\n        const {\n          data\n        } = await Api.getRequest('/api/players');\n        const parsedData = JSON.parse(data);\n        setPlayers(parsedData);\n        setLoading(false);\n      } catch (error) {\n        console.error('Error fetching players:', error);\n        setError('Error fetching players. Please try again.');\n        setLoading(false);\n      }\n    };\n    fetchPlayers();\n  }, []);\n  console.log(players);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"ViewPlayer\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this)\n  // <div className=\"productscreen\">\n  //   {loading ? (\n  //     <h2>Loading...</h2>\n  //   ) : error ? (\n  //     <h2>{error}</h2>\n  //   ) : (\n  //     <>\n  //       <div className=\"productscreen__left\">\n  //         <div className=\"left__image\">\n  //           <img src={product.imageUrl} alt={product.name} />\n  //         </div>\n  //         <div className=\"left__info\">\n  //           <p className=\"left__name\">{product.name}</p>\n  //           <p>Price: ${product.price}</p>\n  //           <p>Description: {product.description}</p>\n  //         </div>\n  //       </div>\n  //       <div className=\"productscreen__right\">\n  //         <div className=\"right__info\">\n  //           <p>\n  //             Price:\n  //             <span>${product.price}</span>\n  //           </p>\n  //           <p>\n  //             Status:\n  //             <span>\n  //               {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\n  //             </span>\n  //           </p>\n  //           <p>\n  //             Qty\n  //             <select value={qty} onChange={e => setQty(e.target.value)}>\n  //               {[...Array(product.countInStock).keys()].map(x => (\n  //                 <option key={x + 1} value={x + 1}>\n  //                   {x + 1}\n  //                 </option>\n  //               ))}\n  //             </select>\n  //           </p>\n  //           <p>\n  //             <button type=\"button\" onClick={addToCartHandler}>\n  //               Add To Cart\n  //             </button>\n  //           </p>\n  //         </div>\n  //       </div>\n  //     </>\n  //   )}\n  // </div>\n  ;\n};\n_s(ViewPlayer, \"7Ogia2OX8uOGEGzgXE3oafWVvYg=\");\n_c = ViewPlayer;\nexport default ViewPlayer;\nvar _c;\n$RefreshReg$(_c, \"ViewPlayer\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","ViewPlayer","_s","players","setPlayers","loading","setLoading","error","setError","fetchPlayers","data","Api","getRequest","parsedData","JSON","parse","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/baatbtraca/ecom/backupfront/src/screens/ViewPlayer.js"],"sourcesContent":["import './ProductScreen.css'\r\nimport {useState, useEffect} from 'react'\r\n\r\nconst ViewPlayer = () => {\r\n    const [players, setPlayers] = useState([]);\r\n    const [loading,setLoading] = useState(true)\r\n    const [error,setError] = useState(false)\r\n  \r\n    useEffect(() => {\r\n      const fetchPlayers = async () => {\r\n        try {\r\n          const { data } = await Api.getRequest('/api/players');\r\n          const parsedData = JSON.parse(data);\r\n          setPlayers(parsedData);\r\n          setLoading(false)\r\n        } catch (error) {\r\n          console.error('Error fetching players:', error);\r\n          setError('Error fetching players. Please try again.'); \r\n          setLoading(false);\r\n        }\r\n      };\r\n  \r\n      fetchPlayers();\r\n    }, []);\r\n    console.log(players);\r\n  return (\r\n    <div>\r\n        ViewPlayer\r\n    </div>\r\n    // <div className=\"productscreen\">\r\n    //   {loading ? (\r\n    //     <h2>Loading...</h2>\r\n    //   ) : error ? (\r\n    //     <h2>{error}</h2>\r\n    //   ) : (\r\n    //     <>\r\n    //       <div className=\"productscreen__left\">\r\n    //         <div className=\"left__image\">\r\n    //           <img src={product.imageUrl} alt={product.name} />\r\n    //         </div>\r\n    //         <div className=\"left__info\">\r\n    //           <p className=\"left__name\">{product.name}</p>\r\n    //           <p>Price: ${product.price}</p>\r\n    //           <p>Description: {product.description}</p>\r\n    //         </div>\r\n    //       </div>\r\n    //       <div className=\"productscreen__right\">\r\n    //         <div className=\"right__info\">\r\n    //           <p>\r\n    //             Price:\r\n    //             <span>${product.price}</span>\r\n    //           </p>\r\n    //           <p>\r\n    //             Status:\r\n    //             <span>\r\n    //               {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n    //             </span>\r\n    //           </p>\r\n    //           <p>\r\n    //             Qty\r\n    //             <select value={qty} onChange={e => setQty(e.target.value)}>\r\n    //               {[...Array(product.countInStock).keys()].map(x => (\r\n    //                 <option key={x + 1} value={x + 1}>\r\n    //                   {x + 1}\r\n    //                 </option>\r\n    //               ))}\r\n    //             </select>\r\n    //           </p>\r\n    //           <p>\r\n    //             <button type=\"button\" onClick={addToCartHandler}>\r\n    //               Add To Cart\r\n    //             </button>\r\n    //           </p>\r\n    //         </div>\r\n    //       </div>\r\n    //     </>\r\n    //   )}\r\n    // </div>\r\n  )\r\n}\r\n\r\nexport default ViewPlayer\r\n"],"mappings":";;AAAA,OAAO,qBAAqB;AAC5B,SAAQA,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,OAAO,EAACC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC3C,MAAM,CAACU,KAAK,EAACC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMC,GAAG,CAACC,UAAU,CAAC,cAAc,CAAC;QACrD,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC;QACnCN,UAAU,CAACS,UAAU,CAAC;QACtBP,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdS,OAAO,CAACT,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;QAC/CC,QAAQ,CAAC,2CAA2C,CAAC;QACrDF,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDG,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACNO,OAAO,CAACC,GAAG,CAACd,OAAO,CAAC;EACtB,oBACEH,OAAA;IAAAkB,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK;EACL;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAAA;AAEJ,CAAC;AAAApB,EAAA,CA5EKD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AA8EhB,eAAeA,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}